#!/bin/sh

set -eu


is_exclude_file() {
    # Exclude following directories and files
    [ ".git"		= "$1" ] && return 1
    [ ".gitignore"	= "$1" ] && return 1
    [ ".DS_Store"	= "$1" ] && return 1
    return 0
}


deploy_dotfiles() {
    for i in .??*; do
	is_exclude_file $i
	if [ $? = 1 ]; then
	    continue
	fi

	for f in `find $i -type f`; do
	    filename=`basename $f`

	    is_exclude_file $filename
	    if [ $? = 1 ]; then
		continue
	    fi

	    dirname=`dirname $f`
	    target_dir="$HOME/$dirname"
	    
	    if [ ! -e $target_dir ]; then
		mkdir -pv $target_dir
	    fi

	    cmd="ln -fnsv $DOTFILES/$f $HOME/$f"
	    eval $cmd
	done
    done
}


initialize() {
    echo "Install Homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    echo "Install Fish"
    brew install fish
    echo "Install Emacs Mac Port"
    brew tap railwaycat/emacsmacport
    brew install emacs-mac --with-modern-icon
    echo "Install Oh My Fish"
    curl -L http://get.oh-my.fish | fish
    echo "Change Fish theme"
    omf install chain
}


usage() {
  name=`basename $0`
  cat <<EOF
Usage:
  $name [command]
Commands:
  deploy	- deploy dotfiles
  initialize	- initialize environment
EOF
}


# Get dotfiles absolute directory path and set as current working directory
DOTFILES=`dirname "${0}"`
expr "${0}" : "/.*" > /dev/null || DOTFILES=`(cd "${DOTFILES}" && pwd)`
cd $DOTFILES

# Parse argument
if [ $# -gt 0 ]; then
    command=$1
    shift
else
    usage
    exit 1
fi

case $command in
    deploy)
	deploy_dotfiles
	;;
    init*)
	initialize
	;;
    *)
	usage
	;;
esac

exit 0
